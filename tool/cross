#! /usr/bin/env bash
set -e
cd "$(dirname "$0")/.."
version=$(cat .version)
verbose=$(echo "$@" | grep -q -- --verbose && echo true || echo false)
linux-cross() {
  while read -r triple toolchain_name
  do
    crossc() {
      (
        img=wlinkmeyer/$(uname -m)-cross
        [ "$verbose" = true ] && set -x
        docker run -v "$PWD:/src" --rm "$img" \
          "${toolchain_name}-g++" \
            --sysroot "/etc/sysroots/$triple" \
            -I "/usr/include/$toolchain_name" \
            -I "/etc/sysroots/$triple/usr/include" \
            -I "/etc/sysroots/$triple/usr/include/c++/12" \
            -I "/etc/sysroots/$triple/usr/include/$toolchain_name" \
            -I "/etc/sysroots/$triple/usr/include/$toolchain_name/c++/12" \
            -I /src/watcher-c/include \
            -I /src/include \
            -std=c++17 \
            -fno-exceptions \
            -fno-rtti \
            -fexpensive-optimizations \
            -fno-omit-frame-pointer \
            -fstrict-enums \
            -fstrict-overflow \
            -fstrict-aliasing \
            -fstack-protector-strong \
            -Os \
            $@
      )
    }
    build() {
      if [ -e "$1" ]
      then echo "[$triple] Exists: $1"
      else
        [ -d "$(dirname "$1")" ] || mkdir -p "$(dirname "$1")"
        crossc -o "/src/$1" "${@:2}"
        sudo chown "$USER" "$1"
        echo -n "[$triple] Built: " ; file "$1"
      fi
    }
    echo "$@" | grep -q -- --target && { echo "$@" | grep -q -- "--target-$triple" || continue ; }
    echo "$@" | grep -q -- --clean && rm -rf "out/$triple"
    build "out/$triple/libwatcher-c.so" -shared -fPIC /src/watcher-c/src/watcher-c.cpp
    build "out/$triple/watcher" /src/src/wtr/watcher/main.cpp
    build "out/$triple/tw" /src/src/wtr/tiny_watcher/main.cpp
    [ -e "out/$triple/libwatcher-c.so.$version" ] || cp "out/$triple/libwatcher-c.so" "out/$triple/libwatcher-c.so.$version"
    [ -f "out/$triple/watcher.hpp" ] || cp include/wtr/watcher.hpp "out/$triple/watcher.hpp"
    python3 tool/shasum.py "out/$triple" mk
  done <<EOF
  aarch64-unknown-linux-gnu aarch64-linux-gnu
  armv7-unknown-linux-gnueabihf arm-linux-gnueabihf
  x86_64-unknown-linux-gnu x86_64-linux-gnu
  aarch64-unknown-linux-musl aarch64-linux-musl
  armv7-unknown-linux-musleabihf arm-linux-musleabihf
  x86_64-unknown-linux-musl x86_64-linux-musl
EOF
}
macos-cross() {
  case "$(uname -m)" in
    arm64) triple=aarch64-apple-darwin ;;
    *) echo "Unsupported architecture: $(uname -m)" ; exit 1 ;;
  esac
  cc() {
    (
      [ "$verbose" = true ] && set -x
      c++ \
        -target "$triple" \
        -I watcher-c/include \
        -I include \
        -std=c++17 \
        -fno-exceptions \
        -fno-rtti \
        -fno-omit-frame-pointer \
        -fstrict-enums \
        -fstrict-overflow \
        -fstrict-aliasing \
        -fstack-protector-strong \
        -Os \
        -framework CoreFoundation \
        -framework CoreServices \
        $@
    )
  }
  build() {
    if [ -e "$1" ]
    then echo "[$triple] Exists: $1"
    else
      [ -d "$(dirname "$1")" ] || mkdir -p "$(dirname "$1")"
      cc -o "$1" "${@:2}"
      echo -n "[$triple] Built: " ; file "$1"
    fi
  }
  echo "$@" | grep -q -- --target && { echo "$@" | grep -q -- "--target-$triple" || return ; }
  echo "$@" | grep -q -- --clean && rm -rf "out/$triple"
  build "out/$triple/libwatcher-c.so" -shared -fPIC watcher-c/src/watcher-c.cpp
  build "out/$triple/watcher" src/wtr/watcher/main.cpp
  build "out/$triple/tw" src/wtr/tiny_watcher/main.cpp
  [ -e "out/$triple/libwatcher-c.so.$version" ] || cp "out/$triple/libwatcher-c.so" "out/$triple/libwatcher-c.so.$version"
  [ -f "out/$triple/watcher.hpp" ] || cp include/wtr/watcher.hpp "out/$triple/watcher.hpp"
  python3 tool/shasum.py "out/$triple" mk
}
linux-cross "$@"
if uname | grep -q Darwin
then macos-cross "$@"
fi
